name: CI
on:
  push:
    paths-ignore:
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - .gitignore
      - "*.md"
env:
  DOCKER_USERNAME: luigi311
jobs:
  base:
    name: ${{ matrix.name }} ${{ matrix.enc }}
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        name: [aomenc]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      #- name: Slimdown
      #  run: |
      #    wget https://raw.githubusercontent.com/apache/flink/master/tools/azure-pipelines/free_disk_space.sh
      #    chmod +x free_disk_space.sh
      #    ./free_disk_space.sh

      - name: Docker meta
        id: docker_meta
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        if: "${{ env.DOCKER_TOKEN != '' }}"
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKER_USERNAME }}/encoders-docker/${{ matrix.name}} # list of Docker images to use as base name for tags
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: |
            type=ref,event=branch,suffix={{date 'YYYYMMDD'}}
            type=schedule,pattern={{date 'YYYYMMDD'}}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: "${{ steps.docker_meta.outcome == 'success' }}"
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build
        id: build
        if: "${{ steps.docker_meta.outcome == 'skipped' }}"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.${{ matrix.name }}
          push: false
          tags: registry.gitlab.com/luigi311/encoders-docker/${{ matrix.name}}:static-latest
      
      - name: Build Push
        id: build_push
        if: "${{ steps.docker_meta.outcome == 'success' }}"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      # Echo digest so users can validate their image
      - name: Image digest
        if: "${{ steps.docker_meta.outcome == 'success' }}"
        run: echo "${{ steps.build_push.outputs.digest }}"
    
    
    
    
  ffmpeg:
    name: ${{ matrix.name }} ${{ matrix.enc }}
    runs-on: ubuntu-latest
    needs: base
    strategy:
      fail-fast: false
      matrix:
        name: [ffmpeg]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        if: "${{ env.DOCKER_TOKEN != '' }}"
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKER_USERNAME }}/encoders-docker/${{ matrix.name}} # list of Docker images to use as base name for tags
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: |
            type=ref,event=branch,suffix={{date 'YYYYMMDD'}}
            type=schedule,pattern={{date 'YYYYMMDD'}}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: "${{ steps.docker_meta.outcome == 'success' }}"
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build
        id: build
        if: "${{ steps.docker_meta.outcome == 'skipped' }}"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.${{ matrix.name }}
          push: false
          tags: registry.gitlab.com/luigi311/encoders-docker/${{ matrix.name}}:static-latest
      
      - name: Build Push
        id: build_push
        if: "${{ steps.docker_meta.outcome == 'success' }}"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      # Echo digest so users can validate their image
      - name: Image digest
        if: "${{ steps.docker_meta.outcome == 'success' }}"
        run: echo "${{ steps.build_push.outputs.digest }}"
