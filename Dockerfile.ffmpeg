FROM ubuntu:20.04

# Set to noninteractive to fix issue with tzdate
ARG DEBIAN_FRONTEND=noninteractive
ARG CFLAGS="-fno-omit-frame-pointer -pthread -fgraphite-identity -floop-block -ldl -lpthread -g -fPIC -I/usr/include/x86_64-linux-gnu -I/usr/local/include -I/usr/lib/include"
ARG CXXFLAGS="-fno-omit-frame-pointer -pthread -fgraphite-identity -floop-block -ldl -lpthread -g -fPIC -I/usr/include/x86_64-linux-gnu -I/usr/local/include -I/usr/lib/include"
ARG LDFLAGS="-Wl,-Bsymbolic -fPIC -static -L/usr/lib/x86_64-linux-gnu -L/usr/local/lib -L/usr/local/lib64 -L/usr/lib -L/usr/lib64"
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib:/usr/local/lib/x86_64-linux-gnu/

# Install Dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        pkg-config \
        git \
        curl \
        python3 \
        python3-pip \
        python3-setuptools \
        python3-wheel \
        python3-docutils \
        doxygen \
        build-essential \
        ninja-build \
        nasm \
        yasm \
        libnuma1 \
        libgl1-mesa-glx \
        cmake \
        libass-dev \
        autoconf \
        openssl \
        libssl-dev \
        automake \
        libtool \
        libevent-dev \
        libjpeg-dev \
        libgif-dev \
        libpng-dev \
        libwebp-dev \
        libmemcached-dev \
        imagemagick \
        libpython3-dev \
        libavformat-dev \
        libavcodec-dev \
        libswscale-dev \
        libavutil-dev \
        libswresample-dev \
        libdevil-dev \
        libx265-dev \
        libnuma-dev \
        vim \
        nano \
        checkinstall && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN pip3 install --no-cache-dir meson

# Install libvmaf
COPY --from=registry.gitlab.com/luigi311/encoders-docker/aomenc:latest /vmaf.deb /packages/
#COPY --from=aomenc /vmaf.deb /packages/
RUN dpkg -i /packages/vmaf.deb

# Install aomenc
COPY --from=registry.gitlab.com/luigi311/encoders-docker/aomenc:latest /aomenc.deb /packages/
#COPY --from=aomenc /aomenc.deb /packages/
RUN dpkg -i /packages/aomenc.deb

# Install svt-av1
COPY --from=registry.gitlab.com/luigi311/encoders-docker/svt-av1:latest /svt-av1.deb /packages/
#COPY --from=svt-av1 /svt-av1.deb /packages/
RUN dpkg -i /packages/svt-av1.deb

# Install rav1e
COPY --from=registry.gitlab.com/luigi311/encoders-docker/rav1e:static-latest /rav1e-static/usr /usr
COPY --from=registry.gitlab.com/luigi311/encoders-docker/rav1e:static-latest /usr/local/bin/rav1e /usr/local/bin/rav1e
#COPY --from=rav1e /rav1e-static /
#COPY --from=rav1e /usr/local/bin/rav1e /usr/local/bin/rav1e

# Install x265
COPY --from=registry.gitlab.com/luigi311/encoders-docker/x265:static-latest /x265.deb /packages/
#COPY --from=x265 /x265.deb /packages/
RUN dpkg -i /packages/x265.deb

# Install svt-hevc
COPY --from=registry.gitlab.com/luigi311/encoders-docker/svt-hevc:latest /svt-hevc.deb /packages/
#COPY --from=svt-hevc /svt-hevc.deb /packages/
RUN dpkg -i /packages/svt-hevc.deb

# Install x264
COPY --from=registry.gitlab.com/luigi311/encoders-docker/x264:latest /x264.deb /packages/
#COPY --from=x264 /x264.deb /packages/
RUN dpkg -i /packages/x264.deb

# Install vpxenc
COPY --from=registry.gitlab.com/luigi311/encoders-docker/vpxenc:latest /vpxenc.deb /packages/
#COPY --from=vpxenc /vpxenc.deb /packages/
RUN dpkg -i /packages/vpxenc.deb

# Clone ffmpeg
RUN git clone --branch release/4.4 git://source.ffmpeg.org/ffmpeg /ffmpeg
WORKDIR /ffmpeg

# Build ffmpeg
RUN ./configure \
        --ld="g++" \
        --pkg-config-flags="--static" \
        --disable-shared \
        --enable-static \
        --extra-libs="-pthread -lm -lpthread" \
        --enable-gpl \
        --enable-version3 \
        --enable-librav1e \
        --enable-libx264 \
#        --enable-libx265 \
        --enable-libvpx \
        --enable-libaom \
        --enable-libvmaf

RUN make -j"$(nproc)" && \
    checkinstall --install=yes --default -D --pkgname "ffmpeg" make install && \
    cp ffmpeg_*.deb /ffmpeg.deb

RUN /usr/local/bin/ffmpeg --help

ENTRYPOINT [ "/usr/local/bin/ffmpeg" ]
